<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">
    
    <dxmvvm:NumericToVisibilityConverter x:Key="NumericToVisibilityConverter" />

    <Label x:Key="DefaultDXDialogContent" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;5;6" />
    
    <!--DXHeaderTemplate-->
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=HeaderTemplate}" TargetType="{x:Type ContentControl}">
        <dxcore_unique_xmlns:DXWindowHeader x:Name="PART_Header" CornerRadius="0" Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=ActiveHeaderBackground}}" Focusable="False">
            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;10;14">
                <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;11;18" />

                <DockPanel LastChildFill="True" Name="PART_HeaderDock" Margin="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;13;18">
                    <Image x:Name="PART_Icon" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}}" DockPanel.Dock="Left" Source="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;14;22" />

                    <Grid x:Name="PART_Grid" DockPanel.Dock="Right" UseLayoutRounding="True" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;16;22">
                        <ItemsControl Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}" Visibility="Hidden" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;17;26">
                            <dxcore_unique_xmlns:HeaderItemControl Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}" DockPanel.Dock="Right" />
                        </ItemsControl>
                        <ItemsControl x:Name="PART_HeaderButtons" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;20;26">
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_CloseButton" DockPanel.Dock="Right" Visibility="Collapsed" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}}" />
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Maximize" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Restore" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}, RelativeSource={RelativeSource Self}}" />
                            <dxcore_unique_xmlns:HeaderItemControl x:Name="PART_Minimize" DockPanel.Dock="Right" Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" />
                            <dxcn:DXWindowHeaderItemsControl x:Name="PART_HeaderCustomItems" Focusable="False" DockPanel.Dock="Right" Style="{DynamicResource {dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}}" />
                        </ItemsControl>
                    </Grid>

                    <ContentPresenter x:Name="PART_CaptionContentPresenter" DockPanel.Dock="Left" Content="{x:Null}" ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;29;22" />
                </DockPanel>
            </Grid>
        </dxcore_unique_xmlns:DXWindowHeader>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=WindowStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, FallbackValue={x:Static sys:String.Empty}}" Value="None">
                <Setter Property="Visibility" TargetName="PART_Maximize" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_Restore" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_Minimize" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_HeaderCustomItems" Value="Collapsed" />

            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background" TargetName="PART_Header" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=InactiveHeaderBackground}}" />
                <Setter Property="Opacity" TargetName="PART_CaptionContentPresenter" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=InactiveHeaderOpacity}}" />
            </DataTrigger>
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--FloatingContainerTamplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerTemplate}">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;53;10">
            <Control x:Name="PART_ActiveBorder" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingActiveBorder}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;54;14" />
            <Control x:Name="PART_InactiveBorder" Visibility="Collapsed" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingInactiveBorder}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;55;14" />
            
            <Grid Margin="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;57;14">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <ContentControl x:Name="Header" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=HeaderTemplate}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;63;18" />
                <Grid Grid.Row="1" x:Name="PART_ContentOffset" Margin="{Binding Path=(dxc:FloatingContainerControl.ContentOffset), RelativeSource={RelativeSource Self} }" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;64;18">
                    <Control x:Name="PART_ContentBackground" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingBackground}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;65;22" />
                    <Control x:Name="PART_InactiveContentBackground" Visibility="Collapsed" Template="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=InactiveFloatingBackground}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;66;22" />
                    <Grid Margin="1" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;67;22">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentPresenter x:Name="PART_ContainerContent" Content="{Binding}" Grid.Row="0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;73;26" />

                        
                    </Grid>
                </Grid>
            </Grid>
            <StackPanel x:Name="PART_StatusPanel" Grid.Row="0" Visibility="Collapsed" VerticalAlignment="Bottom" Margin="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=SizeGripMargin}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;79;14">
                <Thumb x:Name="PART_SizeGrip" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}" Cursor="SizeNWSE" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="16" Height="16" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;80;18" />
            </StackPanel>
            <Control x:Name="PART_ResizeFrame" Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}" Focusable="False" Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;82;14" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Visibility" TargetName="PART_InactiveBorder" Value="Visible" />
                <Setter Property="Visibility" TargetName="PART_ActiveBorder" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_InactiveContentBackground" Value="Visible" />
                <Setter Property="Visibility" TargetName="PART_ContentBackground" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility" TargetName="PART_StatusPanel" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_ResizeFrame" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--FullDXWindowTemplate-->
    <ControlTemplate TargetType="{x:Type dxc:DXWindow}" x:Key="DXWindowTemplate">
        <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;100;10">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;101;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;102;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" DataContext="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding ActualWindowTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;103;22">
                        <ContentPresenter.Content>
                            <dxcore_unique_xmlns:DXWindowBackgroundPanel DataContext="{TemplateBinding DataContext}" Focusable="False">
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                    <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                    <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                            </dxcore_unique_xmlns:DXWindowBackgroundPanel>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--EmptyDXWindowTemplate-->
    <ControlTemplate TargetType="{x:Type dxc:DXWindow}" x:Key="DXWindowEmptyTemplate">
        <Grid x:Name="Root_Grid" Height="Auto" Margin="0,0,0,0" VerticalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;122;10">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;123;14">
                <AdornerDecorator ClipToBounds="True" x:Name="PART_WindowAdornerDecorator" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;124;18">
                    <ContentPresenter ContentTemplate="{TemplateBinding ActualWindowTemplate}" Height="Auto" Width="Auto" x:Name="PART_RootContentPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;125;22">
                        <ContentPresenter.Content>
                            <Border dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;127;30" />
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--DXWindowStyle-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}" TargetType="{x:Type dxc:DXWindow}">
        <Setter Property="MinHeight" Value="42" />
        <!--SPECIFICTHEME MetropolisDark, MetropolisLight <Setter Property="MinHeight" Value="50" /> SPECIFICTHEME-->
        <!--SPECIFICTHEME TouchlineDark 
        <Setter Property="TextElement.FontSize" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontSize}}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontFamily}}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxdst:ThemeColorsThemeKey ResourceKey=WhiteForegroundColor}}" /> SPECIFICTHEME-->
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowResizeBorderThickness}}" />
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}}" />
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}}" />
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}}" />
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}}" />
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}}" />
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}}" />
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}}" />
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}}" />
        <Setter Property="AeroWindowTemplate" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowTemplate}}" />
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=AeroWindowBorderSize}}" />
        <Setter Property="WindowTemplate" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerTemplate}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBodyMargin}}" />
        <Setter Property="Template" Value="{StaticResource DXWindowTemplate}" />

        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DXDialogTemplate-->
    <ControlTemplate TargetType="{x:Type dxc:DXDialog}" x:Key="DXDialogTemplate">
        <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;168;10">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;169;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;170;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" DataContext="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding ActualWindowTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;171;22">
                        <ContentPresenter.Content>
                            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;173;30">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel DataContext="{TemplateBinding DataContext}">
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                        <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                        <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel>
                                <StackPanel Orientation="Horizontal" x:Name="Footer" Margin="12" Grid.Row="2" HorizontalAlignment="Right" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;186;34">
                                    <Button x:Name="YesButton" IsDefault="True" Content="{dxc:DXMessageBoxStringId StringId=Yes}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;187;38" />
                                    <Button x:Name="NoButton" IsCancel="True" Content="{dxc:DXMessageBoxStringId StringId=No}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;188;38" />
                                    <Button x:Name="OkButton" IsDefault="True" Content="{dxc:DXMessageBoxStringId StringId=Ok}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;189;38" />
                                    <Button x:Name="CancelButton" IsCancel="True" Content="{dxc:DXMessageBoxStringId StringId=Cancel}" MinWidth="65" MinHeight="22" Margin="6,0,0,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;190;38" />
                                </StackPanel>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </Border>
        </Grid>
    </ControlTemplate>
    <!--DXDialogStyle-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXDialog}" TargetType="{x:Type dxc:DXDialog}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}}">
        <!--SPECIFICTHEME TouchlineDark 
        <Setter Property="TextElement.FontSize" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontSize}}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontFamily}}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxdst:ThemeColorsThemeKey ResourceKey=WhiteForegroundColor}}" /> SPECIFICTHEME-->
        <Setter Property="Template" Value="{StaticResource DXDialogTemplate}" />
    </Style>

    <!--DXDialogWindowTemplate-->    
    <ControlTemplate x:Key="DXDialogWindowTemplate" TargetType="{x:Type dxc:DXDialogWindow}">
        <Grid x:Name="Root_Grid" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;210;10">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;211;14">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;212;18">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}" DataContext="{TemplateBinding DataContext}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;213;22">
                        <ContentPresenter.Content>
                            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;215;30">
                                <Grid.Resources>
                                    <dxmvvm:BooleanToObjectConverter x:Key="DialogFooterMarginConverter">
                                        <dxmvvm:BooleanToObjectConverter.TrueValue>
                                            <Thickness>6,12,12,12</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.TrueValue>
                                        <dxmvvm:BooleanToObjectConverter.FalseValue>
                                            <Thickness>0</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.FalseValue>
                                    </dxmvvm:BooleanToObjectConverter>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <dxcore_unique_xmlns:DXWindowBackgroundPanel>
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                        <Binding Path="ContentTemplate" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.ContentTemplate>
                                    <dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                        <PriorityBinding>
                                            <Binding Path="Content" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Source="{StaticResource DefaultDXDialogContent}" />
                                        </PriorityBinding>
                                    </dxcore_unique_xmlns:DXWindowBackgroundPanel.Content>
                                </dxcore_unique_xmlns:DXWindowBackgroundPanel>
                                <ItemsControl x:Name="Footer" Grid.Row="1" Focusable="False" ItemsSource="{Binding CommandButtons, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=CommandButtons.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NumericToVisibilityConverter}}" ItemsPanel="{Binding CommandButtonsPanel, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;241;34" />
                                <ContentControl x:Name="FooterContainer" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Row="1" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;242;34">
                                    <dxcore_unique_xmlns:NonLogicalDecorator x:Name="FooterPresenter" Margin="{Binding HasFooterButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DialogFooterMarginConverter}}" DataContext="{x:Null}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;243;38" />
                                </ContentControl>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--DXDialogWindowCommandButtonStyle-->
    <Style x:Key="DXDialogWindowCommandButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Margin" Value="6,0,0,0" />
        <Setter Property="ContentTemplate" Value="{Binding ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <!--DXDialogWindowStyle-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXDialogWindow}" TargetType="{x:Type dxc:DXDialogWindow}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXWindow}}">
        <!--SPECIFICTHEME TouchlineDark 
        <Setter Property="TextElement.FontSize" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontSize}}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontFamily}}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxdst:ThemeColorsThemeKey ResourceKey=WhiteForegroundColor}}" /> SPECIFICTHEME-->
        <Setter Property="Template" Value="{StaticResource DXDialogWindowTemplate}" />
        <Setter Property="CommandButtonStyle" Value="{StaticResource DXDialogWindowCommandButtonStyle}" />
        <Setter Property="CommandButtonsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="12" HorizontalAlignment="Right" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;272;22" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXDialogWindowTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DialogButtonStyle-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DialogButton}" TargetType="dxc:DialogButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="CommandButtonStyle" Value="{StaticResource DXDialogWindowCommandButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:DialogButton">
                    <Button Style="{Binding CommandButtonStyle, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding CommandButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding ActualCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding ActualContent, RelativeSource={RelativeSource TemplatedParent}}" IsDefault="{Binding ActualIsDefault, RelativeSource={RelativeSource TemplatedParent}}" IsCancel="{Binding ActualIsCancel, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;290;22" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DialogButtonControlStyle-->
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DialogButtonsControl}" TargetType="dxc:DialogButtonsControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemsSource" Value="{Binding Path=(dxc:DialogButtonsControl.CommandsSource), RelativeSource={RelativeSource Self}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;304;22" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:DialogButtonsControl">
                    <ItemsPresenter Margin="{TemplateBinding Padding}" Visibility="{Binding HasItems, Converter={dxmvvm:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;311;22" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--HeaderButtonTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}" TargetType="{x:Type dxc:HeaderItemControl}">
        <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;319;10">
            <Control Name="PART_Background" Focusable="False" Template="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;320;14" />
            <Border Name="MarginBorder" Background="Transparent" Margin="4,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;321;14">
                <ContentPresenter x:Name="PART_ContentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\Generic\Window.xaml;322;18" />
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="Name" Value="PART_Minimize">
                <Setter TargetName="PART_ContentPresenter" Property="ContentTemplate" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}}" />
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}}" />
                <Setter TargetName="MarginBorder" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_Maximize">
                <Setter TargetName="PART_ContentPresenter" Property="ContentTemplate" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}}" />
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}}" />
                <Setter TargetName="MarginBorder" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_Restore">
                <Setter TargetName="PART_ContentPresenter" Property="ContentTemplate" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}}" />
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}}" />
                <Setter TargetName="MarginBorder" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="Name" Value="PART_CloseButton">
                <Setter TargetName="PART_ContentPresenter" Property="ContentTemplate" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}}" />
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}}" />
                <Setter TargetName="MarginBorder" Property="Margin" Value="0" />
            </Trigger>
            <!--.-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ShowBorder" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}}" />
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="ShowBorder" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}}" />
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}}" />
            </MultiTrigger>
            <Trigger Property="ShowBorder" Value="False">
                <Setter TargetName="PART_Background" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <!--.-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsPressed" Value="False" />
                    <Condition Property="Name" Value="PART_CloseButton" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundNormalState}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="Name" Value="PART_CloseButton" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}}" />
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="Name" Value="PART_CloseButton" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Background" Property="Template" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}}" />
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundPressedState}}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>