<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:cs="colorscheme_ignorable_uri">
    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Standard.v16.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/PseudoWindow.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--InactiveHeaderOpacity-->
    <sys:Double x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderOpacity}">0.5</sys:Double>
    <!--Thickness-->
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}">4</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectOffset}">1</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectLeftMargins}">0, 10, 0, 10</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectRightMargins}">0, 10, 0, 10</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectTopMargins}">0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectBottomMargins}">0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=SizeGripMargin}">7,0,7,7</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBodyMargin}">6,0,6,6</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerCaptionTextBlockMargin}">6,0,6,0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}">1</Thickness>
    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}">0</Thickness>
    <!--Brushes-->
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectActiveColor}" Color="#FFAA1948" cs:Name="SolidColorBrush_0001" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectInactiveColor}" Color="#FF999999" cs:Name="SolidColorBrush_0002" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}" Color="#FFD6D6D6" cs:Name="SolidColorBrush_0003" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}" Color="#FFD6D6D6" cs:Name="SolidColorBrush_0004" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ThemeName=Standard, ResourceKey=FloatingContainerBorder}" Color="#FFAA1948" cs:Name="SolidColorBrush_0005" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ThemeName=Standard, ResourceKey=FloatingContainerInactiveBorder}" Color="#FFAA1948" cs:Name="SolidColorBrush_0006" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ThemeName=Standard, ResourceKey=FloatingContainerBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0007" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0008" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=ActiveHeaderBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0009" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0010" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}" Color="#FF222222" cs:Name="SolidColorBrush_0011" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0012" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0013" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerCloseButtonForegroundNormalState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0014" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0015" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerCloseButtonForegroundPressedState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0016" />
    <!--DragwigetTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerDragWidgetTemplate}" TargetType="{x:Type Thumb}">
        <Border Background="#00000000" cs:Name="Border_0001" />
    </ControlTemplate>
    <!--SizeGripTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerSizeGripTemplate}" TargetType="{x:Type Thumb}">
        <Grid Background="#00000000" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True" cs:Name="Grid_0001">
            <Path Stretch="Fill" Fill="#FFACACAC" Data="F1 M 671,130L 673,130L 673,132L 671,132L 671,130 Z M 674,130L 676,130L 676,132L 674,132L 674,130 Z M 677,130L 679,130L 679,132L 677,132L 677,130 Z M 677,127L 679,127L 679,129L 677,129L 677,127 Z M 677,124L 679,124L 679,126L 677,126L 677,124 Z M 674,127L 676,127L 676,129L 674,129L 674,127 Z " Width="8" Height="8" cs:Name="Path_0001" />
        </Grid>
    </ControlTemplate>
    <!--CaptionTemplate-->
    <!--
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerCaptionTemplate}">
        <Grid x:Name="Root" Height="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Image x:Name="PART_Icon" Stretch="None" HorizontalAlignment="Left" Margin="6,0,5,0" Source="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" />
            <dxc:DXWindowSmartCenteringPanel Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
                <TextBlock x:Name="PART_Text" 
                           TextTrimming="WordEllipsis" 
                           Foreground="#FF3C3C3C" 
                           FontSize="16"   
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" 
                           Text="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" 
                           IsHitTestVisible="False" 
                           cs:Name="TextBlock_0001" />
            </dxc:DXWindowSmartCenteringPanel>
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>-->
    <!--CaptionTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate}">
        <Grid x:Name="Root" Height="Auto">
            <dxc:DXWindowSmartCenteringPanel HorizontalAlignment="Stretch" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerCaptionTextBlockMargin}}">
                <TextBlock x:Name="PART_Text" TextTrimming="WordEllipsis" Foreground="#FF3C3C3C" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" IsHitTestVisible="False" cs:Name="TextBlock_0001" />
            </dxc:DXWindowSmartCenteringPanel>
        </Grid>
        <!--<DataTemplate.Triggers>
            <Trigger Property="Source" SourceName="PART_Icon" Value="{x:Null}">
                <Setter TargetName="PART_Text" Property="VerticalAlignment" Value="Bottom" />
                <Setter TargetName="PART_Text" Property="Margin" Value="15,0,0,3" />
            </Trigger>
            <Trigger Property="Visibility" SourceName="PART_Icon" Value="Collapsed">
                <Setter TargetName="PART_Text" Property="VerticalAlignment" Value="Bottom" />
                <Setter TargetName="PART_Text" Property="Margin" Value="15,0,0,3" />
            </Trigger>
        </DataTemplate.Triggers>-->
    </DataTemplate>
    <!--WindowBordersTemplate-->
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingActiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}}" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingInactiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}}" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}}" Padding="1">
            <Border Background="#FFFBFBFB" cs:Name="Border_0008" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveFloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}}" Padding="1">
            <Border Background="#FFFBFBFB" cs:Name="Border_0009" />
        </Border>
    </ControlTemplate>
    <!--CloseButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}">
        <Grid x:Name="Glyph" Width="7" Height="7">
            <Path x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1 M 0,0L 2,0L 2,1L 3,1L 3,2L 4,2L 4,1L 5,1L 5,0L 7,0L 7,2L 6,2L 6,3L 5,3L 5,4L 6,4L 6,5L 7,5L 7,7L 5,7L 5,6L 4,6L 4,5L 3,5L 3,6L 2,6L 2,7L 0,7L 0,5L 1,5L 1,4L 2,4L 2,3L 1,3L 1,2L 0,2L 0,0 Z " cs:Name="Path_0002" />
        </Grid>
    </DataTemplate>
    <!--RestoreButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}">
        <Grid x:Name="Glyph" Width="10" Height="9">
            <Path x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1 M 362,312L 365,312L 365,309L 372,309L 372,315L 369,315L 369,318L 362,318L 362,312 Z M 369,312L 369,314L 371,314L 371,311L 366,311L 366,312L 369,312 Z M 363,314L 363,317L 368,317L 368,314L 363,314 Z " cs:Name="Path_0004" />
        </Grid>
    </DataTemplate>
    <!--MinimizeButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}">
        <Grid x:Name="Glyph" Width="9" Height="2" Margin="0,0,0,-5">
            <Rectangle x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" cs:Name="Rectangle_0001" />
        </Grid>
    </DataTemplate>
    <!--MaximizeButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}">
        <Grid x:Name="Glyph" Width="10" Height="8">
            <Path x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1 M 10,0L 10,8L 0,8L 0,0L 10,0 Z M 1,7L 9,7L 9,3L 1,3L 1,7 Z " cs:Name="Path_0003" />
        </Grid>
    </DataTemplate>
    <!--HeaderDefaultButton Normal Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}">
        <Border x:Name="NormalState" Background="#FFE04343" BorderBrush="#FFE04343" BorderThickness="1" cs:Name="Border_0003" />
    </ControlTemplate>
    <!--HeaderDefaultButton Normal Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}" />
    <!--HeaderDefaultButton MouseOver Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}">
        <Border x:Name="HoverState" Background="#FFAA1948" BorderBrush="#FF3665B3" BorderThickness="1" cs:Name="Border_0007" />
    </ControlTemplate>
    <!--HeaderCloseButton MouseOver Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}">
        <Border x:Name="HoverState" Background="#FFE04343" BorderBrush="#FFE04343" BorderThickness="1" cs:Name="Border_0003" />
    </ControlTemplate>
    <!--HeaderDefaultButton Pressed Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}">
        <Border x:Name="Pressed" Background="#FFC75050" BorderBrush="#FFC75050" BorderThickness="1" cs:Name="Border_0005" />
    </ControlTemplate>
    <!--HeaderCloseButton Pressed Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}">
        <Border x:Name="Pressed" Background="#FFC75050" BorderBrush="#FFC75050" BorderThickness="1" cs:Name="Border_0006" />
    </ControlTemplate>
    <!--WindowTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerWindowTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingWindowContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerStyle}}" />
    </ControlTemplate>
    <!--AdornerTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerAdornerTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingAdornerContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ThemeName=Standard, ResourceKey=FloatingContainerStyle}}" />
    </ControlTemplate>
    <!--HeaderButtonStyle-->
    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}" TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="26" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}}" />
    </Style>
    <!--HeaderCloseButtonStyle-->
    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}" TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="44" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}}" />
    </Style>
    <!--HeaderItemControlStyle-->
    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.HeaderItemControl}" TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}}" />
    </Style>
    <!--DXWindowIconStyle-->
    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="6,0,5,0" />
        <Setter Property="Stretch" Value="None" />
    </Style>
</ResourceDictionary>