<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:dxdiagt="http://schemas.devexpress.com/winfx/2008/xaml/diagram/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdiagcore="http://schemas.devexpress.com/winfx/2008/xaml/diagram/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}">7</sys:Double>
    <Thickness x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerMoveBorderThickness}">7</Thickness>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerRectStrokeThickness}">3</sys:Double>
    <Thickness x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartDefaultBorderThickness}">2</Thickness>
    <Thickness x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartSelectBorderThickness}">4</Thickness>
    
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementSize}">13</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementSize}">13</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}">5</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorSelectionPartDefaultThickness}">2</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorSelectionPartSelectedThickness}">4</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragThickness}">2</sys:Double>
    
    <Thickness x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderThickness}">3</Thickness>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}">13</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointSize}">5</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SnapLineExtent}">10</sys:Double>
    <sys:Double x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ShapePresenterDefaultSize}">40</sys:Double>

    <Thickness x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=RotationAdornerMargin}">-10,-30,-13,0</Thickness>

    <!-- Adoner -->

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ResizeBoxBackground}" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}" Color="#FF939393" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerMoveBorderBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartBorderBrush}" Color="#FF21408F" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ParameterPointsBackground}" Color="#FFFFFF00" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ParameterPointsStroke}" Color="#FF000000" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerFill}" Color="#FF0EA619" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerEndFill}" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerStroke}" Color="#FF207626" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointFill}" Color="#FF0000FF" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragColor}" Color="#FFA2A2A2" />
    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ConnectorMovePointColor}" Color="#FF6A6A6A" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementBackground}" Color="Transparent" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementBackground}" Color="Transparent" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=EndFreeElementBackground}" Color="#FFA2A2A2" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrush}" Color="#FF22D006" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointBrush}" Color="#FF6A6A6A" />

    <SolidColorBrush x:Key="{dxdiagt:AdornersThemeKeys ResourceKey=SnapLineBrush}" Color="#FF5AC85A" />

    <Style TargetType="Rectangle" x:Key="BoxStyle">
        <Setter Property="Width" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}" />
        <Setter Property="Height" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}" />
        <Setter Property="Fill" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ResizeBoxBackground}}" />
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.SelectionAdorner}" TargetType="{x:Type dxdiag:SelectionAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:SelectionAdorner}">
                    <Grid Name="root">
                        <Image x:Name="RotationIcon" Source="{dxdiag:DiagramSvgImage Size='21,21', Path=Images/Svg/Rotate.svg}" Width="21" Height="21" Margin="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=RotationAdornerMargin}}" HorizontalAlignment="Center" VerticalAlignment="Top">
                        </Image>
                        <Grid Margin="-3">
                            <Rectangle x:Name="rect" Margin="3" Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}" />
                            <Border x:Name="MoveBorder" BorderThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerMoveBorderThickness}}" BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerMoveBorderBrush}}" />
                            <ItemsControl ItemsSource="{TemplateBinding ResizeModes}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle Style="{StaticResource BoxStyle}" dxdiag:DiagramInput.InputElementFactory="{Binding InputElementFactory}" VerticalAlignment="{Binding VerticalAlignment}" HorizontalAlignment="{Binding HorizontalAlignment}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanResize" Value="False">
                            <Setter TargetName="rect" Property="StrokeThickness" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionAdornerRectStrokeThickness}}" />
                        </Trigger>
                        <Trigger Property="IsMultipleSelection" Value="True">
                            <Setter TargetName="root" Property="Margin" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="CanRotate" Value="False">
                            <Setter TargetName="RotationIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.SelectionPartAdorner}" TargetType="{x:Type dxdiag:SelectionPartAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:SelectionPartAdorner}">
                    <Border Name="border" BorderThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartDefaultBorderThickness}}" BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartBorderBrush}}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPrimarySelection" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartSelectBorderThickness}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ShapeParametersAdorner}" TargetType="{x:Type dxdiag:ShapeParametersAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ShapeParametersAdorner}">
                    <dxdiag:ScaleItemsControl x:Name="PART_ItemsControl" ItemsSource="{Binding Parameters, RelativeSource={RelativeSource TemplatedParent}}" Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Point}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Rectangle Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}" Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=PointsSize}}" Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ParameterPointsBackground}}" Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ParameterPointsStroke}}" StrokeThickness="1" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </dxdiag:ScaleItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorSelectionAdorner}" TargetType="{x:Type dxdiag:ConnectorSelectionAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorSelectionAdorner}">
                    <ControlTemplate.Resources>
                        <Style x:Key="BoxContainerStyle" TargetType="Border">
                            <Setter Property="Padding" Value="4" />
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <dxdiag:ConnectorPointItemsControl x:Name="Points" ItemsSource="{Binding Points, RelativeSource={RelativeSource TemplatedParent}}" Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsControl.ItemContainerStyle>
                                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorPointAdorner}" TargetType="{x:Type dxdiag:ConnectorPointAdorner}">
                                    <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Position}" />
                                    <Setter Property="PointIndex" Value="{Binding Index}" />
                                    <Setter Property="Connector" Value="{Binding Connector}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                        </dxdiag:ConnectorPointItemsControl>
                        <dxdiag:ScaleCanvas x:Name="BeginEndPoints" Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                            <Border x:Name="BeginFreeElement" Style="{StaticResource BoxContainerStyle}" dxdiag:ScaleCanvas.Position="{Binding BeginPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                <Rectangle Style="{StaticResource BoxStyle}" />
                            </Border>
                            <Grid x:Name="BeginConnectedElement" Visibility="Collapsed" dxdiag:ScaleCanvas.Position="{Binding BeginPoint, RelativeSource={RelativeSource TemplatedParent}}" Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementSize}}" Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementSize}}" Background="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=BeginConnectedElementBackground}}">
                                <Ellipse Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerFill}}" Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerStroke}}" Margin="3" />
                            </Grid>
                            <Border x:Name="EndFreeElement" Style="{StaticResource BoxContainerStyle}" dxdiag:ScaleCanvas.Position="{Binding EndPoint, RelativeSource={RelativeSource TemplatedParent}}">
                                <Rectangle Style="{StaticResource BoxStyle}" Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndFreeElementBackground}}" />
                            </Border>
                            <Grid x:Name="EndConnectedElement" Visibility="Collapsed" dxdiag:ScaleCanvas.Position="{Binding EndPoint, RelativeSource={RelativeSource TemplatedParent}}" Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementSize}}" Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementSize}}" Background="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=EndConnectedElementBackground}}">
                                <Ellipse Margin="1" Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerStroke}}" Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerEndFill}}" />
                                <Ellipse Margin="4" Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorConnectedMarkerFill}}" />
                            </Grid>
                        </dxdiag:ScaleCanvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBeginPointConnected" Value="True">
                            <Setter TargetName="BeginFreeElement" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="BeginConnectedElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEndPointConnected" Value="True">
                            <Setter TargetName="EndFreeElement" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="EndConnectedElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="CanResize" Value="False">
                            <Setter TargetName="BeginEndPoints" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorPointAdorner}" TargetType="{x:Type dxdiag:ConnectorPointAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorPointAdorner}">
                    <Ellipse Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}}" Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointSize}}" Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorIntermediatePointFill}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorSelectionPartAdorner}" TargetType="{x:Type dxdiag:ConnectorSelectionPartAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorSelectionPartAdorner}">
                    <dxdiag:ShapePresenter x:Name="shapePresenter" Zoom="{TemplateBinding dxdiag:AdornerLayer.Zoom}" Shape="{TemplateBinding Shape}" Stroke="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SelectionPartBorderBrush}}" StrokeThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorSelectionPartDefaultThickness}}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPrimarySelection" Value="True">
                            <Setter TargetName="shapePresenter" Property="StrokeThickness" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorSelectionPartSelectedThickness}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ConnectorPreviewAdornerBaseStyle" TargetType="{x:Type dxdiag:ConnectorPreviewAdornerBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectorPreviewAdornerBase}">
                    <dxdiag:ShapePresenter Zoom="{TemplateBinding dxdiag:AdornerLayer.Zoom}" Shape="{TemplateBinding Shape}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorDragPreviewAdorner}" TargetType="{x:Type dxdiag:ConnectorDragPreviewAdorner}" BasedOn="{StaticResource ConnectorPreviewAdornerBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragColor}}" />
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragColor}}" />
        <Setter Property="StrokeThickness" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorDragThickness}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectorMovePointPreviewAdorner}" TargetType="{x:Type dxdiag:ConnectorMovePointPreviewAdorner}" BasedOn="{StaticResource ConnectorPreviewAdornerBaseStyle}">
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ConnectorMovePointColor}}" />
        <Setter Property="StrokeThickness" Value="1" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.GlueToItemAdorner}" TargetType="{x:Type dxdiag:GlueToItemAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:GlueToItemAdorner}">
                    <Border BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrush}}" BorderThickness="3" Margin="-3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.GlueToPointAdorner}" TargetType="{x:Type dxdiag:GlueToPointAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:GlueToPointAdorner}">
                    <dxdiag:ScaleCanvas>
                        <Border BorderBrush="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueHighlightBrush}}" BorderThickness="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderThickness}}" Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}}" Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=GlueToPointBorderSize}}" />
                    </dxdiag:ScaleCanvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ConnectionPointsAdorner}" TargetType="{x:Type dxdiag:ConnectionPointsAdorner}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ConnectionPointsAdorner}">
                    <dxdiag:ScaleItemsControl ItemsSource="{Binding Path=Points, RelativeSource={RelativeSource TemplatedParent}}" Scale="{Binding Path=(dxdiag:AdornerLayer.Zoom), RelativeSource={RelativeSource TemplatedParent}}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="dxdiag:ScaleCanvas.Position" Value="{Binding Position}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Ellipse Width="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointSize}}" Height="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointSize}}" Fill="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapeConnectionPointBrush}}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </dxdiag:ScaleItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="boundsSnapLineStyle" TargetType="Line">
        <Setter Property="Stroke" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SnapLineBrush}}" />
        <Setter Property="StrokeDashArray" Value="4,2" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="X1" Value="{Binding From.X, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Y1" Value="{Binding From.Y, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="X2" Value="{Binding To.X, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Y2" Value="{Binding To.Y, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.HorizontalBoundsSnapLineAdorner}" TargetType="{x:Type dxdiagcore:HorizontalBoundsSnapLineAdorner}">
        <Setter Property="Extent" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SnapLineExtent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:HorizontalBoundsSnapLineAdorner}">
                    <Line Name="Line" Style="{StaticResource boundsSnapLineStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.VerticalBoundsSnapLineAdorner}" TargetType="{x:Type dxdiagcore:VerticalBoundsSnapLineAdorner}">
        <Setter Property="Extent" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SnapLineExtent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:VerticalBoundsSnapLineAdorner}">
                    <Line Name="Line" Style="{StaticResource boundsSnapLineStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.HorizontalSizeSnapLineAdorner}" TargetType="{x:Type dxdiagcore:HorizontalSizeSnapLineAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:HorizontalSizeSnapLineAdorner}">
                    <Grid Margin="0,0,0,-25">
                        <ContentPresenter VerticalAlignment="Bottom" ContentTemplate="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SizeSnapLineTemplate}}" Height="17" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.Native.VerticalSizeSnapLineAdorner}" TargetType="{x:Type dxdiagcore:VerticalSizeSnapLineAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiagcore:VerticalSizeSnapLineAdorner}">
                    <Grid Margin="0,0,-25,0">
                        <ContentPresenter HorizontalAlignment="Right" ContentTemplate="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=SizeSnapLineTemplate}}" Height="17">
                            <ContentPresenter.LayoutTransform>
                                <RotateTransform Angle="90" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Diagram.ShapeStylePresenter}" TargetType="{x:Type dxdiag:ShapeStylePresenter}">
        <Setter Property="Text" Value="Abc" />
        <Setter Property="Width" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapePresenterDefaultSize}}" />
        <Setter Property="Height" Value="{DynamicResource {dxdiagt:AdornersThemeKeys ResourceKey=ShapePresenterDefaultSize}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:ShapeStylePresenter}">
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Canvas Height="40" Width="40">
                            <Polyline x:Name="PART_Line1" Stroke="Black" Points="5,5 5,35 35,35" />
                            <Line x:Name="PART_Line2" Stroke="Black" StrokeThickness="1" X1="0" Y1="0" X2="-5" Y2="2" Canvas.Left="35" Canvas.Top="35" />
                            <Line x:Name="PART_Line3" Stroke="Black" StrokeThickness="1" X1="0" Y1="0" X2="-5" Y2="-2" Canvas.Left="35" Canvas.Top="35" />
                        </Canvas>
                        <TextBlock x:Name="PART_Text" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Text}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>