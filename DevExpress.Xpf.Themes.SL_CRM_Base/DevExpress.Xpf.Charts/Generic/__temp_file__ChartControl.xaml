<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/charts" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <local:SelectionListRectToGeometryConverter x:Key="selectionListRectToGeometryConverter" />

    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=ChartPaddingValue}">16</Thickness>
    <Thickness x:Key="{dxt:ChartControlThemeKey ResourceKey=ChartBorderThickness}">1</Thickness>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SelectionControl}" TargetType="{x:Type local:SelectionControl}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SelectionControl">
                    <Grid x:Name="root" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;14;22">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="root">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="shape" To="#20FF0000" Duration="0:0:0" />
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="shape" To="#FFFF0000" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="root">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="shape" Margin="-4" RadiusX="4" RadiusY="4" StrokeThickness="3" Fill="#204ACBFC" Stroke="#FF4ACBFC" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;44;26" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SelectionPresentation}" TargetType="{x:Type local:SelectionPresentation}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SelectionPresentation}">
                    <Canvas x:Name="root" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;57;22">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="root">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="shape" To="#20FF0000" Duration="0:0:0" />
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="shape" To="#FFFF0000" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="root">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="shape" Fill="#204ACBFC" Stroke="#FF4ACBFC" StrokeThickness="3" Data="{Binding Path=SelectionGeometryItem.Geometry, Converter={StaticResource selectionListRectToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;87;26" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SelectionGeometryControl}" TargetType="{x:Type local:SelectionGeometryControl}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SelectionGeometryControl}">
                    <Canvas x:Name="root" Visibility="Collapsed" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;100;22">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="root">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="shape" To="#20FF0000" Duration="0:0:0" />
                                        <ColorAnimation Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="shape" To="#FFFF0000" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="root">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="shape" Fill="#204ACBFC" Stroke="#FF4ACBFC" StrokeThickness="3" Data="{Binding Path=Geometry, Converter={StaticResource selectionListRectToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;130;26" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.NavigationLayer}" TargetType="{x:Type local:NavigationLayer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NavigationLayer}">
                    <Grid IsHitTestVisible="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;141;22">
                        <ContentPresenter x:Name="PART_Selection" ContentTemplate="{Binding Path=ChartControl.Diagram.(local:XYDiagram2D.SelectionTemplate), RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;142;26" />
                        <Canvas dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;143;26">
                            <Image x:Name="PART_Cursor" IsHitTestVisible="False" Cursor="None" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="None" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;144;30" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ChartControl}" TargetType="local:ChartControl">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=ChartBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=ChartBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=ChartBorderThickness}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=ChartPaddingValue}}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Palette">
            <Setter.Value>
                <local:OfficePalette />
            </Setter.Value>
        </Setter>
        <Setter Property="IndicatorsPalette">
            <Setter.Value>
                <local:DefaultIndicatorsPalette />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ChartControl">
                    <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;174;22">
                        <local:ChartContentControl x:Name="ChartWrapper" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=ChartWrapperTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;175;26">
                            <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;176;30">
                                <local:TitlesLayoutControl Titles="{Binding Path=Titles, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;177;34">
                                    <local:TitlesLayoutControl.MasterElement>
                                        <local:ChartElementItemsControl x:Name="ChartElements" Diagram="{TemplateBinding Diagram}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;179;42">
                                            <local:ChartElementItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <local:ChartElementPanel dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;182;54" />
                                                </ItemsPanelTemplate>
                                            </local:ChartElementItemsControl.ItemsPanel>
                                        </local:ChartElementItemsControl>
                                    </local:TitlesLayoutControl.MasterElement>
                                </local:TitlesLayoutControl>
                            </Grid>
                        </local:ChartContentControl>
                        <local:ChartItemsControl x:Name="PART_Annotations" ItemsSource="{Binding ChartAnnotations, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;190;26">
                            <local:ChartItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <local:AnnotationLayoutPanel />
                                </ItemsPanelTemplate>                                
                            </local:ChartItemsControl.ItemsPanel>
                        </local:ChartItemsControl>                        
                        <local:NavigationLayer x:Name="PART_NavigationLayer" ChartControl="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <local:CrosshairPanel x:Name="PART_CrosshairLabelsContainer" DataContext="{Binding Path=Diagram, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False">
                            <local:ChartItemsControl ItemsSource="{Binding CrosshairAxisLabelItems}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;199;30">
                                <local:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <local:CrosshairAxisLabelsPanel />
                                    </ItemsPanelTemplate>
                                </local:ChartItemsControl.ItemsPanel>
                                <local:ChartItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=CrosshairAxisLabelTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;207;42" />
                                    </DataTemplate>
                                </local:ChartItemsControl.ItemTemplate>
                            </local:ChartItemsControl>
                            <local:ChartItemsControl ItemsSource="{Binding CrosshairSeriesLabelItems}" ItemTemplate="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=CrosshairSeriesLabelTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Charts\Generic\ChartControl.xaml;211;30">
                                <local:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <local:CrosshairLabelsPanel />
                                    </ItemsPanelTemplate>
                                </local:ChartItemsControl.ItemsPanel>
                            </local:ChartItemsControl>
                        </local:CrosshairPanel>
                        <local:ToolTipControl x:Name="PART_ToolTip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" ToolTipItem="{Binding Path=ToolTipItem, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>